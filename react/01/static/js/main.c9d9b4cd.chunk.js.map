{"version":3,"sources":["component/layout/header.js","component/pages/About.js","component/pages/NotFounds.js","context.js","component/layout/textInputGroup.js","component/contacts-section/addContact.js","component/contacts-section/contact.js","component/contacts-section/contacts.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","appTitle","className","to","class","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","defaultProps","About","Component","Context","React","createContext","reducer","state","action","contacts","filter","contact","payload","Provider","dispatch","setState","value","this","children","Consumer","TextInputGroup","label","name","placeholder","onChange","error","htmlFor","classnames","initialState","email","phone","country","gender","skills","errors","AddContact","e","target","checked","concat","skill","onSubmit","preventDefault","newContact","uuid","myForm","current","reset","history","push","console","log","createRef","ref","bind","Contact","showContactInfo","onShowClick","onDeleteClick","onClick","style","cursor","float","color","length","join","Contacts","map","key","App","component","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9d9b4cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n  const {appTitle} = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{appTitle}</Link>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/\"><i className=\"fa fa-home\"></i> Home</Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/contact/add\"><i className=\"fa fa-plus\"></i> Contact Add</Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/about\"><i className=\"fa fa-question\"></i> About</Link>\r\n            </li>\r\n\r\n          </ul>\r\n          \r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  appTitle: 'Contact Manager'\r\n}\r\n\r\nHeader.propTypes = {\r\n  appTitle: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"display-4\">About Contact Manager</h2>\r\n        <p className=\"leads\">Simple app to manage contacts</p>\r\n        <p className=\"text-secondary\">Version 1.0.0</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NotFounds extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h2>\r\n        <p className=\"leads\">Sorry, that page does not exist</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state,action) => {\r\n  switch(action.type){\r\n    case 'DELETE_CONTACT':\r\n      return{\r\n        ...state,\r\n        contacts: state.contacts.filter( contact => contact.id !== action.payload )\r\n      }\r\n    case 'ADD_CONTACT':\r\n      return{\r\n        ...state,\r\n        contacts: [action.payload,...state.contacts]\r\n      }\r\n    \r\n    default:\r\n     return state;\r\n  }\r\n}\r\n\r\nexport  class Provider extends Component {\r\n\r\n  // data store\r\n  state = {\r\n    \r\n    contacts: [],\r\n\r\n    dispatch: action => this.setState(state => reducer(state,action))\r\n  }\r\n\r\n  // dom render\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup =  ({label,name,value,placeholder,type,onChange,id,error}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input  type={type} \r\n              name={name} \r\n              className={classnames('form-control form-control-lg',{\r\n                'is-invalid': error\r\n              })}\r\n              placeholder={placeholder} \r\n              value={value} \r\n              onChange={onChange} \r\n              id={id}\r\n      />\r\n      {\r\n        error && <div className=\"invalid-feedback\">{error}</div>\r\n      }\r\n      \r\n    </div>\r\n  )\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label:PropTypes.string.isRequired,\r\n  name:PropTypes.string.isRequired,\r\n  value:PropTypes.string.isRequired,\r\n  placeholder:PropTypes.string.isRequired,\r\n  type:PropTypes.string.isRequired,\r\n  onChange:PropTypes.func.isRequired,\r\n  id:PropTypes.string.isRequired,\r\n  error:PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport uuid from 'uuid';\r\nimport TextInputGroup from '../layout/textInputGroup';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  email: '',\r\n  phone: '',\r\n  country: '',\r\n  gender: '',\r\n  skills: [],\r\n  errors:{}\r\n}\r\nclass AddContact extends Component {\r\n  constructor(){\r\n    super()\r\n    this.myForm = React.createRef()\r\n  }\r\n  state = {\r\n    ...initialState\r\n  }\r\n  onChange = (e) => {\r\n    if(e.target.type === 'checkbox'){\r\n      if(e.target.checked){\r\n        this.setState({ \r\n          ...this.state,\r\n          skills: this.state.skills.concat(e.target.value)\r\n         })\r\n      }\r\n      else {\r\n        this.setState({ \r\n          ...this.state,\r\n          skills: this.state.skills.filter(skill => skill !== e.target.value)\r\n         })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n  }\r\n  onSubmit = (dispatch,e) => {\r\n    e.preventDefault();\r\n\r\n    const { name,email,phone,country,gender,skills } = this.state\r\n    const newContact = {\r\n      id:uuid(),\r\n      name,\r\n      email,\r\n      phone,\r\n      country,\r\n      gender,\r\n      skills\r\n    }\r\n\r\n    // check for errors\r\n    if(name === '') {\r\n      this.setState({\r\n        errors:{name:'Name is required'}\r\n        \r\n      })\r\n      return;\r\n    }\r\n    if(email === '') {\r\n      this.setState({\r\n        errors:{email:'Email is required'}\r\n      })\r\n      return;\r\n    }\r\n    if(phone === '') {\r\n      this.setState({\r\n        errors:{phone:'Phone is required'}\r\n      })\r\n      return;\r\n    }\r\n    \r\n    dispatch({  type:'ADD_CONTACT', payload: newContact });\r\n\r\n    this.myForm.current.reset()\r\n    this.setState({\r\n      ...initialState\r\n    });\r\n\r\n    this.props.history.push('/');\r\n    \r\n    console.log(this.state)\r\n  }\r\n  render() {\r\n    const { name,email,phone,errors} = this.state;\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return (\r\n            <div className=\"card my-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form ref={this.myForm} onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n\r\n                  <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter name...\" value={name} onChange={this.onChange} id=\"name\" error={errors.name} />\r\n                  <TextInputGroup label=\"Email\" name=\"email\" placeholder=\"Enter email...\" value={email} onChange={this.onChange} id=\"email\" error={errors.email} />\r\n                  <TextInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter phone...\" value={phone} onChange={this.onChange} id=\"phone\" error={errors.phone} />\r\n                  \r\n                  \r\n                  \r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"country\">Choose Your Country</label>\r\n                    <select name=\"country\" className='form-control form-control-lg' onChange={this.onChange} id='country' >\r\n                      <option>Choose Your Country</option>\r\n                      <option value=\"Bangladesh\">Bangladesh</option>\r\n                      <option value=\"India\">India</option>\r\n                      <option value=\"Pakistan\">Pakistan</option>\r\n                    </select>\r\n                  </div> \r\n\r\n                  <div className=\"form-group\">\r\n                    <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" type=\"radio\" name=\"gender\"  onChange={this.onChange} value=\"Male\" id=\"gender1\" />\r\n                      <label htmlFor=\"gender1\" className=\"form-check-label\">Male</label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" type=\"radio\" name=\"gender\"  onChange={this.onChange} value=\"Female\" id=\"gender2\" />\r\n                      <label htmlFor=\"gender2\" className=\"form-check-label\">Female</label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <h5>Skills</h5>\r\n                    <div className=\"form-check\">\r\n                      <input name=\"skills\" className=\"form-check-input\" type=\"checkbox\"  onChange={this.onChange} value=\"HTML5\" id=\"html\" />\r\n                      <label htmlFor=\"html\" className=\"form-check-label\">HTML5</label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input name=\"skills\" className=\"form-check-input\" type=\"checkbox\"   onChange={this.onChange} value=\"CSS3\" id=\"css\" />\r\n                      <label htmlFor=\"css\" className=\"form-check-label\">CSS3</label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input name=\"skills\" className=\"form-check-input\" type=\"checkbox\"   onChange={this.onChange} value=\"Javascript\" id=\"js\" />\r\n                      <label htmlFor=\"js\" className=\"form-check-label\">Javascript</label>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"form-group\">\r\n                    <input  type=\"submit\" className=\"btn btn-block btn-success\" value=\"Submit\"/>\r\n                  </div>\r\n                </form>\r\n              </div>       \r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\n\r\nclass Contact extends Component {\r\n  // data store \r\n  state= {\r\n    showContactInfo: false\r\n  };\r\n  // event\r\n  onShowClick = (e) => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    })\r\n  }\r\n  onDeleteClick = (id,dispatch) => {\r\n    dispatch({\r\n      type: 'DELETE_CONTACT',\r\n      payload: id\r\n    })\r\n  }\r\n  // dom render\r\n  render() {\r\n    const {id,name,email,phone,country,gender,skills} = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {\r\n          value => {\r\n            const {dispatch} = value;\r\n            return (\r\n              <div className=\"card card-body my-3\">\r\n                <h3>\r\n                  {name} \r\n                  <i className=\"fa fa-sort-desc\" onClick={this.onShowClick} style={{cursor:'pointer'}}/>\r\n                  <i className=\"fa fa-times\" onClick={this.onDeleteClick.bind(this,id,dispatch)} style={{cursor:'pointer',float:'right',color: '#eb1b33'}}/>\r\n                    \r\n                </h3>\r\n                { this.state.showContactInfo ? \r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Contact: {phone}</li>\r\n                    <li className=\"list-group-item\">Country: {country.length === 0 ? 'N/A' : country}</li>\r\n                    <li className=\"list-group-item\">Gender: {gender.length === 0 ? 'N/A' : gender}</li>\r\n                    <li className=\"list-group-item\">Skills: {skills.length === 0 ? 'N/A' : skills.join(' , ')}</li>\r\n                  </ul>\r\n                  :\r\n                  null\r\n                }\r\n              </div>\r\n            )\r\n          }\r\n        }\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n}\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './contact.js';\r\nimport {Consumer}from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n  // dom render\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {contacts} = value;\r\n          return (\r\n            <div>\r\n              <h2 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h2>\r\n              {\r\n                contacts.length === 0 ? <h4 className=\"text-secondary my-3\">There is no contact</h4> : contacts.map(contact => <Contact contact={contact} key={contact.id}/>)\r\n              }\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\nexport default  Contacts;\r\n","import React, { Component } from 'react'\n\n// react-router\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\n\n// import contact.js\nimport Header from './component/layout/header';\nimport About from './component/pages/About';\nimport NotFounds from './component/pages/NotFounds';\nimport AddContact from './component/contacts-section/addContact';\nimport Contacts from './component/contacts-section/contacts';\n\nimport { Provider } from './context';\n\n// bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header  />\n            <div className=\"container\">\n              <Switch>\n                <Route  component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                {/* <Route component={NotFounds} /> */}\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}