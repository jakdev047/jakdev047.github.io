{"version":3,"sources":["store/todoContext.js","components/layout/header.js","components/layout/footer.js","components/layout/todoItem.js","components/layout/todoList.js","components/pages/addContact.js","components/pages/home.js","components/pages/about.js","components/App.js","serviceWorker.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","state","items","title","editItem","handleChange","e","setState","target","value","handleSubmit","preventDefault","alert","updatedItems","id","uuid","clearList","handleDelete","filteredItems","filter","item","handleEdit","selectedItem","find","Provider","this","props","children","Component","TodoConsumer","Consumer","Header","branding","className","to","defaultProps","Footer","copyright","href","ToDoList","onClick","map","index","key","type","AddContact","onSubmit","placeholder","onChange","Home","App","exact","path","component","About","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c4938a4.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport uuid from 'uuid';\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nclass TodoProvider extends Component {\r\n\r\n  // data store\r\n  state = {\r\n    items:[],\r\n    title: '',\r\n    editItem: false\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      title: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if(this.state.title === '') {\r\n      alert('Title is required')\r\n    }\r\n    else {\r\n      // new item\r\n      const newItem = {\r\n        id: uuid(),\r\n        title: this.state.title\r\n      }\r\n\r\n      // updated Items\r\n      const updatedItems = [newItem,...this.state.items];\r\n\r\n      // clear state\r\n      this.setState({\r\n        items: updatedItems,\r\n        title: '',\r\n        id: uuid(),\r\n        editItem: false\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  clearList = () => {\r\n    this.setState({\r\n      items:[]\r\n    })\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    const filteredItems = this.state.items.filter(item => item.id !== id);\r\n\r\n    this.setState({\r\n      items: filteredItems\r\n    })\r\n  }\r\n\r\n  handleEdit = (id) => {\r\n    const filteredItems = this.state.items.filter(item => item.id !== id);\r\n\r\n    const selectedItem = this.state.items.find(item => item.id === id);\r\n\r\n    this.setState({\r\n      items: filteredItems,\r\n      title:selectedItem.title,\r\n      id:id,\r\n      editItem: true\r\n    })\r\n  }\r\n\r\n  // dom rendder\r\n  render() {\r\n    return(\r\n      <TodoContext.Provider value={{\r\n        ...this.state,\r\n        handleChange: this.handleChange,\r\n        handleSubmit: this.handleSubmit,\r\n        clearList: this.clearList,\r\n        handleDelete: this.handleDelete,\r\n        handleEdit: this.handleEdit \r\n      }}>\r\n        {this.props.children}\r\n      </TodoContext.Provider>\r\n    )\r\n  }\r\n\r\n}\r\nconst TodoConsumer = TodoContext.Consumer;\r\n\r\nexport {TodoProvider,TodoConsumer,TodoContext}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fa fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fa fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\nHeader.defaultProps = { branding: 'Logo' };\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\nexport default Header;\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = props => {\n  const { copyright } = props;\n  return (\n    <Fragment>\n      <div className=\"p-3 mb-2 bg-dark text-white text-center\">\n        &copy;2019  <a href=\"https://jakdev047.github.io/\">{ copyright }</a>\n      </div>\n    </Fragment>\n  );\n}\nFooter.defaultProps = {\n  copyright: 'Jubayer Alam Khan'\n};\n\nFooter.propTypes = {\n  copyright: PropTypes.string.isRequired\n};\nexport default Footer;\n","import React, { Component} from 'react';\r\n\r\nclass ToDoList extends Component {\r\n  \r\n  render() {\r\n    const {title} = this.props.item;\r\n    return (\r\n        <li className=\"list-group-item text-capitalize d-flex justify-content-between my-2\">\r\n\r\n          <h6>{title}</h6>\r\n\r\n          <div className=\"todo-icon\">\r\n            <span className=\"mx-2 text-success\" onClick={this.props.handleEdit}>\r\n              <i className=\"fa fa-pencil\"></i>\r\n            </span>\r\n\r\n            <span className=\"mx-2 text-danger\" onClick={this.props.handleDelete}>\r\n              <i className=\"fa fa-trash\"></i>\r\n            </span>\r\n\r\n          </div>\r\n        </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n","import React, { Component,Fragment } from 'react';\r\nimport {TodoConsumer} from '../../store/todoContext';\r\n\r\nimport TodoItem from './todoItem';\r\n\r\nclass ToDoList extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <TodoConsumer>\r\n        {\r\n          value => {\r\n            const {items,clearList,handleDelete,handleEdit} = value;\r\n            return (\r\n              <Fragment>\r\n                <div className=\"container\">\r\n                  <ul className=\"list-group my-5\">\r\n                    <h3 className=\"text-capitalize text-center\">todo list</h3>\r\n\r\n                    <Fragment>\r\n                      {\r\n                        items.map((item,index)=>{\r\n                          return <TodoItem item={item} key={index}  \r\n                          handleDelete={()=> handleDelete(item.id)}\r\n                          handleEdit={()=> handleEdit(item.id)}\r\n                        />\r\n                          \r\n                        })\r\n                      }\r\n                    </Fragment>\r\n\r\n                    <button type=\"button\" className=\"btn btn-danger btn-block text-capitalize mt-5\" onClick={clearList}>\r\n                      clear list\r\n                    </button>\r\n                  </ul>\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          }\r\n        }\r\n      </TodoConsumer>\r\n    )\r\n  }\r\n}\r\nexport default ToDoList;\r\n","import React, { Component,Fragment } from 'react';\r\nimport {TodoConsumer} from '../../store/todoContext';\r\n\r\nclass AddContact extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <TodoConsumer>\r\n        {\r\n          value => {\r\n            const {title,handleChange,handleSubmit,editItem} = value;\r\n            return (\r\n              <Fragment>\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto col-md-8 mt-4\">\r\n                      <h3 className=\"text-capitalize text-center\">todo input</h3>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card card-body mb-3\">\r\n                    <form onSubmit={handleSubmit}>\r\n                      <div className=\"input-group \">\r\n                        <div className=\"input-group-prepend\">\r\n                          <div className=\"input-group-text bg-primary text-white\">\r\n                            <i className=\"fa fa-book\"></i>\r\n                          </div>\r\n                          <input type=\"text\" className=\"form-control\" placeholder=\"add a todo item\" value={title} onChange={handleChange} />\r\n                        </div>\r\n                      </div>\r\n                      <button type=\"submit\" className={\r\n                        editItem ? \"btn btn-block btn-success mt-3 text-capitalize\" : \"btn btn-block btn-primary mt-3 text-capitalize\"\r\n                      }> \r\n                        {editItem ? 'edit item' : 'add item'}\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          }\r\n        }\r\n      </TodoConsumer>\r\n    )\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component,Fragment } from 'react';\n\n// component\nimport ToDoList from '../layout/todoList';\nimport AddContact from '../pages/addContact';\n\nclass Home extends Component {\n  \n  render() {\n    return (\n      <Fragment>\n        <AddContact></AddContact>\n        <ToDoList></ToDoList>\n      </Fragment>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h2 className=\"display-4\">About</h2>\n      <p className=\"lead\">Simple About Page</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","// react\nimport React, { Component,Fragment } from 'react';\n\n// router\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport {TodoProvider} from '../store/todoContext';\n\n\n//  bootstrap css\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// react pages\nimport Header from './layout/header';\nimport Footer from './layout/footer';\n\nimport Home from './pages/home';\nimport About from './pages/about';\n\nclass App extends Component {\n  render() {\n    return (\n      <TodoProvider>\n        <Router>\n          <Fragment>\n\n            <Header branding=\"ToDo\" />\n\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route  component={Home} />\n              </Switch>\n            </div>\n\n            <Footer />\n\n          </Fragment>\n        </Router>\n      </TodoProvider>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}